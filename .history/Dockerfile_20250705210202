# Multi-stage build for optimized production image
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Build the package
RUN pip install build && python -m build

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd -r wtfcodebot && useradd -r -g wtfcodebot wtfcodebot

# Set working directory
WORKDIR /app

# Copy built package from builder stage
COPY --from=builder /app/dist/*.whl /tmp/

# Install the package
RUN pip install /tmp/*.whl && rm -rf /tmp/*.whl

# Create directories for reports and cache
RUN mkdir -p /app/reports /app/cache && \
    chown -R wtfcodebot:wtfcodebot /app

# Set environment variables
ENV PYTHONPATH="/app" \
    WTF_CODEBOT_CACHE_DIR="/app/cache" \
    WTF_CODEBOT_REPORTS_DIR="/app/reports"

# Switch to non-root user
USER wtfcodebot

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wtf-codebot --version || exit 1

# Default command
ENTRYPOINT ["wtf-codebot"]
CMD ["--help"]

# Labels for metadata
LABEL org.opencontainers.image.title="WTF CodeBot" \
      org.opencontainers.image.description="AI-powered code analysis and review tool" \
      org.opencontainers.image.version="0.1.0" \
      org.opencontainers.image.vendor="WTF CodeBot Team" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.source="https://github.com/beaux-riel/wtf-codebot" \
      org.opencontainers.image.documentation="https://github.com/beaux-riel/wtf-codebot/blob/main/README.md"

# Development stage (optional, for development use)
FROM production as development

# Switch back to root for development tools installation
USER root

# Install development dependencies
RUN apt-get update && apt-get install -y \
    vim \
    nano \
    less \
    htop \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Install package in development mode
COPY . /app/src/
WORKDIR /app/src
RUN pip install -e ".[dev]"

# Switch back to non-root user
USER wtfcodebot

# Default command for development
CMD ["bash"]
